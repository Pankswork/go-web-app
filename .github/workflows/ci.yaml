# CICD using GitHub actions

name: CI/CD

# Exclude the workflow to run on changes to the helm chart
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go 1.22
      uses: actions/setup-go@v6
      with:
        go-version: 1.22

    - name: Build
      run: go build -o go-web-app

    - name: Test
      run: go test ./...

  codequality:
    name: Run Go Code Quality Checks
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22

    - name: Verify Dependencies
      run: go mod tidy

    - name: Check Code Formatting
      run: |
        gofmt -l .
        if [ "$(gofmt -l . | wc -l)" -gt 0 ]; then
          echo "‚ùå Some files are not formatted. Run 'gofmt -w .'"
          exit 1
        fi

    - name: Run Go Vet (Static Analysis)
      run: go vet ./...

    - name: Run Linter (golangci-lint)
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: run ./...

    - name: Run Unit Tests
      run: go test ./... -v

  push:
    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and Push action
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/go-web-app:${{github.run_id}}

  update-newtag-in-helm-chart:
    runs-on: ubuntu-latest

    needs: push

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.TOKEN }}

    - name: Update tag in Helm chart
      run: |
        sed -i 's/tag: .*/tag: "${{github.run_id}}"/' Helm/go-web-app-chart/values.yaml

    - name: Commit and push changes
      run: |
        git config --global user.email "panks.work08@gmail.com"
        git config --global user.name "pankswork"
        git add Helm/go-web-app-chart/values.yaml
        git commit -m "Update tag in Helm chart"
        git push

